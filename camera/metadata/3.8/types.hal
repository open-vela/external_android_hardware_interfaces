/*
 * Copyright (C) 2021 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Autogenerated from camera metadata definitions in
 * /system/media/camera/docs/metadata_definitions.xml
 * *** DO NOT EDIT BY HAND ***
 */

package android.hardware.camera.metadata@3.8;

import android.hardware.camera.metadata@3.2;
import android.hardware.camera.metadata@3.3;
import android.hardware.camera.metadata@3.4;
import android.hardware.camera.metadata@3.5;
import android.hardware.camera.metadata@3.6;
import android.hardware.camera.metadata@3.7;

// No new metadata sections added in this revision

/**
 * Main enumeration for defining camera metadata tags added in this revision
 *
 * <p>Partial documentation is included for each tag; for complete documentation, reference
 * '/system/media/camera/docs/docs.html' in the corresponding Android source tree.</p>
 */
enum CameraMetadataTag : @3.7::CameraMetadataTag {
    /** android.flash.info.strengthMaximumLevel [static, int32, public]
     *
     * <p>Maximum flashlight brightness level.</p>
     */
    ANDROID_FLASH_INFO_STRENGTH_MAXIMUM_LEVEL = android.hardware.camera.metadata@3.2::CameraMetadataTag:ANDROID_FLASH_INFO_END,

    /** android.flash.info.strengthDefaultLevel [static, int32, public]
     *
     * <p>Default flashlight brightness level to be set via
     * {android.hardware.camera2.CameraManager#turnOnTorchWithStrengthLevel}.</p>
     */
    ANDROID_FLASH_INFO_STRENGTH_DEFAULT_LEVEL,

    ANDROID_FLASH_INFO_END_3_8,

    /** android.request.availableDynamicRangeProfilesMap [static, enum[], ndk_public]
     *
     * <p>A map of all available 10-bit dynamic range profiles along with their
     * capture request constraints.</p>
     */
    ANDROID_REQUEST_AVAILABLE_DYNAMIC_RANGE_PROFILES_MAP = android.hardware.camera.metadata@3.4::CameraMetadataTag:ANDROID_REQUEST_END_3_4,

    /** android.request.recommendedTenBitDynamicRangeProfile [static, int32, java_public]
     *
     * <p>Recommended 10-bit dynamic range profile.</p>
     */
    ANDROID_REQUEST_RECOMMENDED_TEN_BIT_DYNAMIC_RANGE_PROFILE,

    ANDROID_REQUEST_END_3_8,

};

/*
 * Enumeration definitions for the various entries that need them
 */

/** android.control.videoStabilizationMode enumeration values added since v3.2
 * @see ANDROID_CONTROL_VIDEO_STABILIZATION_MODE
 */
enum CameraMetadataEnumAndroidControlVideoStabilizationMode :
        @3.2::CameraMetadataEnumAndroidControlVideoStabilizationMode {
    ANDROID_CONTROL_VIDEO_STABILIZATION_MODE_PREVIEW_STABILIZATION,
};

/** android.request.availableCapabilities enumeration values added since v3.6
 * @see ANDROID_REQUEST_AVAILABLE_CAPABILITIES
 */
enum CameraMetadataEnumAndroidRequestAvailableCapabilities :
        @3.6::CameraMetadataEnumAndroidRequestAvailableCapabilities {
    ANDROID_REQUEST_AVAILABLE_CAPABILITIES_DYNAMIC_RANGE_TEN_BIT,
};

/** android.request.availableDynamicRangeProfilesMap enumeration values
 * @see ANDROID_REQUEST_AVAILABLE_DYNAMIC_RANGE_PROFILES_MAP
 */
enum CameraMetadataEnumAndroidRequestAvailableDynamicRangeProfilesMap : uint32_t {
    ANDROID_REQUEST_AVAILABLE_DYNAMIC_RANGE_PROFILES_MAP_STANDARD
                                                                 = 0x1,
    ANDROID_REQUEST_AVAILABLE_DYNAMIC_RANGE_PROFILES_MAP_HLG10  = 0x2,
    ANDROID_REQUEST_AVAILABLE_DYNAMIC_RANGE_PROFILES_MAP_HDR10  = 0x4,
    ANDROID_REQUEST_AVAILABLE_DYNAMIC_RANGE_PROFILES_MAP_HDR10_PLUS
                                                                 = 0x8,
    ANDROID_REQUEST_AVAILABLE_DYNAMIC_RANGE_PROFILES_MAP_DOLBY_VISION_10B_HDR_REF
                                                                 = 0x10,
    ANDROID_REQUEST_AVAILABLE_DYNAMIC_RANGE_PROFILES_MAP_DOLBY_VISION_10B_HDR_REF_PO
                                                                 = 0x20,
    ANDROID_REQUEST_AVAILABLE_DYNAMIC_RANGE_PROFILES_MAP_DOLBY_VISION_10B_HDR_OEM
                                                                 = 0x40,
    ANDROID_REQUEST_AVAILABLE_DYNAMIC_RANGE_PROFILES_MAP_DOLBY_VISION_10B_HDR_OEM_PO
                                                                 = 0x80,
    ANDROID_REQUEST_AVAILABLE_DYNAMIC_RANGE_PROFILES_MAP_DOLBY_VISION_8B_HDR_REF
                                                                 = 0x100,
    ANDROID_REQUEST_AVAILABLE_DYNAMIC_RANGE_PROFILES_MAP_DOLBY_VISION_8B_HDR_REF_PO
                                                                 = 0x200,
    ANDROID_REQUEST_AVAILABLE_DYNAMIC_RANGE_PROFILES_MAP_DOLBY_VISION_8B_HDR_OEM
                                                                 = 0x400,
    ANDROID_REQUEST_AVAILABLE_DYNAMIC_RANGE_PROFILES_MAP_DOLBY_VISION_8B_HDR_OEM_PO
                                                                 = 0x800,
    ANDROID_REQUEST_AVAILABLE_DYNAMIC_RANGE_PROFILES_MAP_MAX    = 0x1000,
};

/** android.scaler.availableRecommendedStreamConfigurations enumeration values added since v3.4
 * @see ANDROID_SCALER_AVAILABLE_RECOMMENDED_STREAM_CONFIGURATIONS
 */
enum CameraMetadataEnumAndroidScalerAvailableRecommendedStreamConfigurations :
        @3.4::CameraMetadataEnumAndroidScalerAvailableRecommendedStreamConfigurations {
    ANDROID_SCALER_AVAILABLE_RECOMMENDED_STREAM_CONFIGURATIONS_10BIT_OUTPUT
                                                                 = 0x8,
    ANDROID_SCALER_AVAILABLE_RECOMMENDED_STREAM_CONFIGURATIONS_PUBLIC_END_3_8
                                                                 = 0x9,
};
